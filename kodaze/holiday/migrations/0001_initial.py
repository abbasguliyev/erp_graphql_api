# Generated by Django 3.2.12 on 2022-08-26 14:11

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamWorkingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_days', to='company.team')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_teamworkingday', 'Mövcud komanda tətil günlərinə baxa bilər'), ('add_teamworkingday', 'Komanda tətil günü əlavə edə bilər'), ('change_teamworkingday', 'Komandanın tətil günü məlumatlarını yeniləyə bilər'), ('delete_teamworkingday', 'Komandanın tətil gününü silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='TeamExceptionWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holidays', models.CharField(blank=True, max_length=500, null=True)),
                ('exception_workers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('working_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exception_worker', to='holiday.teamworkingday')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_teamexceptionworker', 'Mövcud team istisna işçilərə baxa bilər'), ('add_teamexceptionworker', 'Team istisna işçi əlavə edə bilər'), ('change_teamexceptionworker', 'Team istisna işçi məlumatlarını yeniləyə bilər'), ('delete_teamexceptionworker', 'Team istisna işçiməlumatalrını silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='PositionWorkingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_days', to='company.position')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_positionworkingday', 'Mövcud vəzifə tətil günlərinə baxa bilər'), ('add_positionworkingday', 'Vəzifə tətil günü əlavə edə bilər'), ('change_positionworkingday', 'Vəzifənin tətil günü məlumatlarını yeniləyə bilər'), ('delete_positionworkingday', 'Vəzifənin tətil gününü silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='PositionExceptionWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holidays', models.CharField(blank=True, max_length=500, null=True)),
                ('exception_workers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('working_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exception_worker', to='holiday.positionworkingday')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_positionexceptionworker', 'Mövcud vəzifə istisna işçilərə baxa bilər'), ('add_positionexceptionworker', 'Vəzifə istisna işçi əlavə edə bilər'), ('change_positionexceptionworker', 'Vəzifə istisna işçi məlumatlarını yeniləyə bilər'), ('delete_positionexceptionworker', 'Vəzifə istisna işçiməlumatalrını silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='OfficeWorkingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_days', to='company.office')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_officeworkingday', 'Mövcud ofis tətil günlərinə baxa bilər'), ('add_officeworkingday', 'Ofis tətil günü əlavə edə bilər'), ('change_officeworkingday', 'Ofisin tətil günü məlumatlarını yeniləyə bilər'), ('delete_officeworkingday', 'Ofisin tətil gününü silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='OfficeExceptionWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holidays', models.CharField(blank=True, max_length=500, null=True)),
                ('exception_workers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('working_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exception_worker', to='holiday.officeworkingday')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_officeexceptionworker', 'Mövcud ofis istisna işçilərə baxa bilər'), ('add_officeexceptionworker', 'Ofis istisna işçi əlavə edə bilər'), ('change_officeexceptionworker', 'Ofis istisna işçi məlumatlarını yeniləyə bilər'), ('delete_officeexceptionworker', 'Ofis istisna işçiməlumatalrını silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='HoldingWorkingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_days_count', models.PositiveBigIntegerField(default=0)),
                ('non_working_days_count', models.PositiveBigIntegerField(default=0)),
                ('holidays', models.CharField(blank=True, max_length=500, null=True)),
                ('date', models.DateField(blank=True, default=datetime.datetime.now)),
                ('holding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_days', to='company.holding')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_holdingworkingday', 'Mövcud holdinq tətil günlərinə baxa bilər'), ('add_holdingworkingday', 'Holdinqə tətil günü əlavə edə bilər'), ('change_holdingworkingday', 'Holdinqin tətil günü məlumatlarını yeniləyə bilər'), ('delete_holdingworkingday', 'Holdinqin tətil gününü silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='HoldingExceptionWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holidays', models.CharField(blank=True, max_length=500, null=True)),
                ('exception_workers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('working_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exception_worker', to='holiday.holdingworkingday')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_holdingexceptionworker', 'Mövcud holdinq istisna işçilərə baxa bilər'), ('add_holdingexceptionworker', 'Holdinq istisna işçi əlavə edə bilər'), ('change_holdingexceptionworker', 'Holdinq istisna işçi məlumatlarını yeniləyə bilər'), ('delete_holdingexceptionworker', 'Holdinq istisna işçiməlumatalrını silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='EmployeeWorkingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_days_count', models.PositiveBigIntegerField(default=0)),
                ('non_working_days_count', models.PositiveBigIntegerField(default=0)),
                ('holidays', models.CharField(blank=True, max_length=500, null=True)),
                ('date', models.DateField(blank=True, default=datetime.datetime.now)),
                ('paid_leave_days', models.CharField(blank=True, max_length=500, null=True)),
                ('unpaid_leave_days', models.CharField(blank=True, max_length=500, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_amount', models.FloatField(blank=True, default=0)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_days', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_employeeworkingday', 'Mövcud işçilərin tətil günlərinə baxa bilər'), ('add_employeeworkingday', 'İşçilərə tətil günü əlavə edə bilər'), ('change_employeeworkingday', 'İşçilərin tətil günü məlumatlarını yeniləyə bilər'), ('delete_employeeworkingday', 'İşçilərin tətil gününü silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='EmployeeArrivalAndDepartureTimes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_time', models.TimeField()),
                ('departure_time', models.TimeField()),
                ('employee', models.ManyToManyField(related_name='arrival_and_departure_times', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('view_employeearrivalanddeparturetimes', 'Mövcud işçi gəlib-getmə vaxtlarına baxa bilər'), ('add_employeearrivalanddeparturetimes', 'İşçi gəlib-getmə vaxtı əlavə edə bilər'), ('change_employeearrivalanddeparturetimes', 'İşçi gəlib-getmə vaxtının məlumatlarını yeniləyə bilər'), ('delete_employeearrivalanddeparturetimes', 'İşçi gəlib-getmə vaxtını silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='DepartmentWorkingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_days', to='company.department')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_departmentworkingday', 'Mövcud şöbə tətil günlərinə baxa bilər'), ('add_departmentworkingday', 'Şöbə tətil günü əlavə edə bilər'), ('change_departmentworkingday', 'Şöbənin tətil günü məlumatlarını yeniləyə bilər'), ('delete_departmentworkingday', 'Şöbənin tətil gününü silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='DepartmentExceptionWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holidays', models.CharField(blank=True, max_length=500, null=True)),
                ('exception_workers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('working_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exception_worker', to='holiday.departmentworkingday')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_departmentexceptionworker', 'Mövcud şöbə istisna işçilərə baxa bilər'), ('add_departmentexceptionworker', 'Şöbə istisna işçi əlavə edə bilər'), ('change_departmentexceptionworker', 'Şöbə istisna işçi məlumatlarını yeniləyə bilər'), ('delete_departmentexceptionworker', 'Şöbə istisna işçiməlumatalrını silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='CompanyWorkingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_days', to='company.company')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_companyworkingday', 'Mövcud şirkət tətil günlərinə baxa bilər'), ('add_companyworkingday', 'Şirkət tətil günü əlavə edə bilər'), ('change_companyworkingday', 'Şirkətin tətil günü məlumatlarını yeniləyə bilər'), ('delete_companyworkingday', 'Şirkətin tətil gününü silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='CompanyExceptionWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holidays', models.CharField(blank=True, max_length=500, null=True)),
                ('exception_workers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('working_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exception_worker', to='holiday.companyworkingday')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_companyexceptionworker', 'Mövcud şirkət istisna işçilərə baxa bilər'), ('add_companyexceptionworker', 'Şirkət istisna işçi əlavə edə bilər'), ('change_companyexceptionworker', 'Şirkət istisna işçi məlumatlarını yeniləyə bilər'), ('delete_companyexceptionworker', 'Şirkət istisna işçiməlumatalrını silə bilər')),
                'default_permissions': [],
            },
        ),
    ]
