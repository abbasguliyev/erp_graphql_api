# Generated by Django 4.0.7 on 2022-08-28 16:09

import core.image_validator
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '__first__'),
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_quantity', models.PositiveIntegerField(blank=True, default=1)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12)),
                ('electronic_signature', models.ImageField(blank=True, null=True, upload_to='media/contract/%Y/%m/%d/', validators=[core.image_validator.file_size, django.core.validators.FileExtensionValidator(['png', 'jpeg', 'jpg'])])),
                ('contract_date', models.DateField(blank=True, null=True)),
                ('contract_created_date', models.DateField(auto_now_add=True)),
                ('remaining_debt', models.FloatField(blank=True, default=0)),
                ('loan_term', models.IntegerField(blank=True, default=0)),
                ('initial_payment', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12)),
                ('initial_payment_debt', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12)),
                ('initial_payment_date', models.DateField(blank=True, null=True)),
                ('initial_payment_debt_date', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(blank=True, null=True, upload_to='media/contract/%Y/%m/%d/', validators=[core.image_validator.file_size, django.core.validators.FileExtensionValidator(['pdf'])])),
                ('pdf2', models.FileField(blank=True, null=True, upload_to='media/contract/%Y/%m/%d/', validators=[core.image_validator.file_size, django.core.validators.FileExtensionValidator(['pdf'])])),
                ('cancelled_date', models.DateField(blank=True, null=True)),
                ('debt_closing_date', models.DateField(blank=True, null=True)),
                ('compensation_income', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('compensation_expense', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('debt_finished', models.BooleanField(blank=True, default=False)),
                ('is_remove', models.BooleanField(default=False)),
                ('payment_style', models.CharField(choices=[('NƏĞD', 'NƏĞD'), ('KREDİT', 'KREDİT')], default='NƏĞD', max_length=20)),
                ('new_graphic_amount', models.FloatField(blank=True, default=0)),
                ('new_graphic_status', models.CharField(blank=True, choices=[('YENİ QRAFİK', 'YENİ QRAFİK')], default=None, max_length=50, null=True)),
                ('modified_product_status', models.CharField(blank=True, choices=[('DƏYİŞİLMİŞ MƏHSUL', 'DƏYİŞİLMİŞ MƏHSUL')], default=None, max_length=50, null=True)),
                ('contract_status', models.CharField(choices=[('DAVAM EDƏN', 'DAVAM EDƏN'), ('BİTMİŞ', 'BİTMİŞ'), ('DÜŞƏN', 'DÜŞƏN')], default='DAVAM EDƏN', max_length=20)),
                ('initial_payment_status', models.CharField(choices=[('YOXDUR', 'YOXDUR'), ('BİTMİŞ', 'BİTMİŞ'), ('DAVAM EDƏN', 'DAVAM EDƏN')], default='YOXDUR', max_length=20)),
                ('initial_payment_debt_status', models.CharField(choices=[('YOXDUR', 'YOXDUR'), ('BİTMİŞ', 'BİTMİŞ'), ('DAVAM EDƏN', 'DAVAM EDƏN')], default='YOXDUR', max_length=20)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='company.company')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='account.customer')),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='company.office')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='product.product')),
                ('responsible_employee_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsible_employee_1', to=settings.AUTH_USER_MODEL)),
                ('responsible_employee_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsible_employee_2', to=settings.AUTH_USER_MODEL)),
                ('responsible_employee_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsible_employee_3', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('view_contract', 'Mövcud müqavilələrə baxa bilər'), ('add_contract', 'Müqavilə əlavə edə bilər'), ('change_contract', 'Müqavilə məlumatlarını yeniləyə bilər'), ('delete_contract', 'Müqavilə silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Installment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_no', models.PositiveIntegerField(default=1)),
                ('date', models.DateField(blank=True, default=False, null=True)),
                ('price', models.FloatField(blank=True, default=0)),
                ('last_month', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, default='')),
                ('payment_status', models.CharField(choices=[('ÖDƏNMƏYƏN', 'ÖDƏNMƏYƏN'), ('ÖDƏNƏN', 'ÖDƏNƏN')], default='ÖDƏNMƏYƏN', max_length=30)),
                ('contingent_payment_status', models.CharField(blank=True, choices=[('BURAXILMIŞ AY', 'BURAXILMIŞ AY'), ('NATAMAM AY', 'NATAMAM AY'), ('RAZILAŞDIRILMIŞ AZ ÖDƏMƏ', 'RAZILAŞDIRILMIŞ AZ ÖDƏMƏ'), ('ARTIQ ÖDƏMƏ', 'ARTIQ ÖDƏMƏ'), ('SON AYIN BÖLÜNMƏSİ', 'SON AYIN BÖLÜNMƏSİ')], default=None, max_length=50, null=True)),
                ('close_the_debt_status', models.CharField(blank=True, choices=[('BORCU BAĞLA', 'BORCU BAĞLA')], default=None, max_length=30, null=True)),
                ('delay_status', models.CharField(blank=True, choices=[('GECİKDİRMƏ', 'GECİKDİRMƏ')], default=None, max_length=30, null=True)),
                ('missed_month_substatus', models.CharField(blank=True, choices=[('SIFIR NÖVBƏTİ AY', 'SIFIR NÖVBƏTİ AY'), ('SIFIR SONUNCU AY', 'SIFIR SONUNCU AY'), ('SIFIR DİGƏR AYLAR', 'SIFIR DİGƏR AYLAR')], default=None, max_length=20, null=True)),
                ('incomplete_month_substatus', models.CharField(blank=True, choices=[('NATAMAM NÖVBƏTİ AY', 'NATAMAM NÖVBƏTİ AY'), ('NATAMAM SONUNCU AY', 'NATAMAM SONUNCU AY'), ('NATAMAM DİGƏR AYLAR', 'NATAMAM DİGƏR AYLAR')], default=None, max_length=20, null=True)),
                ('overpayment_substatus', models.CharField(blank=True, choices=[('ARTIQ BİR AY', 'ARTIQ BİR AY'), ('ARTIQ BÜTÜN AYLAR', 'ARTIQ BÜTÜN AYLAR')], default=None, max_length=20, null=True)),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='installments', to='contract.contract')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_installment', 'Mövcud kredit ödəmələrinə baxa bilər'), ('add_installment', 'Kredit ödəməsi əlavə edə bilər'), ('change_installment', 'Kredit ödəməsi məlumatlarını yeniləyə bilər'), ('delete_installment', 'Kredit ödəməsini silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='DemoSales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('created_date', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('sale_count', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('view_demosales', 'Mövcud demo satışlara baxa bilər'), ('add_demosales', 'Demo satış əlavə edə bilər'), ('change_demosales', 'Demo satış məlumatlarını yeniləyə bilər'), ('delete_demosales', 'Demo satış silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ContractGift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveBigIntegerField(default=1)),
                ('gift_date', models.DateField(auto_now_add=True, null=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gifts', to='contract.contract')),
                ('product', models.ManyToManyField(related_name='gifts', to='product.product')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_contractgift', 'Mövcud müqavilə hədiyyələrə baxa bilər'), ('add_contractgift', 'Müqavilə hədiyyə əlavə edə bilər'), ('change_contractgift', 'Müqavilə hədiyyə məlumatlarını yeniləyə bilər'), ('delete_contractgift', 'Müqavilə hədiyyə silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ContractCreditor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creditors', to='contract.contract')),
                ('creditor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creditor_contracts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('view_contractcreditor', 'Mövcud müqavilələrin kreditorlarına baxa bilər'), ('add_contractcreditor', 'Müqaviləyə kreditor əlavə edə bilər'), ('change_contractcreditor', 'Müqavilənin kreditor məlumatlarını yeniləyə bilər'), ('delete_contractcreditor', 'Müqavilənin kreditorunu silə bilər')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ContractChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_style', models.CharField(choices=[('NƏĞD', 'NƏĞD'), ('KREDİT', 'KREDİT')], default='KREDİT', max_length=100)),
                ('loan_term', models.PositiveIntegerField(blank=True, default=0)),
                ('old_contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changed_contracts', to='contract.contract')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('view_contractchange', 'Mövcud dəyişimlərə baxa bilər'), ('add_contractchange', 'Dəyişim əlavə edə bilər'), ('change_contractchange', 'Dəyişim məlumatlarını yeniləyə bilər'), ('delete_contractchange', 'Dəyişim silə bilər')),
                'default_permissions': [],
            },
        ),
    ]
